<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<HTML
><HEAD
><TITLE
>Uso Básico de la distribución Aprendiendo de Jesús de OpenBSD</TITLE
><META
NAME="GENERATOR"
CONTENT="Modular DocBook HTML Stylesheet Version 1.79"><LINK
REL="NEXT"
TITLE="Primer uso de adJ"
HREF="x41.htm"></HEAD
><BODY
CLASS="article"
BGCOLOR="#FFFFFF"
TEXT="#000000"
LINK="#0000FF"
VLINK="#840084"
ALINK="#0000FF"
><DIV
CLASS="ARTICLE"
><DIV
CLASS="TITLEPAGE"
><H1
CLASS="title"
><A
NAME="AEN1"
>Uso Básico de la distribución Aprendiendo de Jesús de OpenBSD</A
></H1
><DIV
CLASS="authorgroup"
><A
NAME="AEN4"
></A
><H3
CLASS="author"
><A
NAME="AEN5"
>Vladimir Támara Patiño (vtamara@pasosdeJesus.org)</A
></H3
><H3
CLASS="author"
><A
NAME="AEN8"
>Hernán Quishpe (ahquishpe@gmail.com)</A
></H3
><H3
CLASS="author"
><A
NAME="AEN11"
>Blanca Acosta (blanca@pasosdeJesus.org)</A
></H3
></DIV
><DIV
><DIV
CLASS="abstract"
><P
></P
><A
NAME="AEN14"
></A
><P
>Estas notas buscan ayudar a usuarios que desean emplear
	      por primera vez el sistema seguro adJ.  
      </P
><P
></P
></DIV
></DIV
><HR></DIV
><DIV
CLASS="section"
><H1
CLASS="section"
><A
NAME="AEN27"
>Introducción</A
></H1
><P
>&#13;    Un sistema operativo es un programa que facilita tanto a una persona
    como a otros programas la utilización de un computador. OpenBSD y
    Linux son sistemas operativos tipo Unix; este tipo de sistemas fue
    cuidadosamente diseñado hacia 1960<A
NAME="AEN30"
HREF="#FTN.AEN30"
><SPAN
CLASS="footnote"
>[1]</SPAN
></A
> inicialmente para programadores, sin embargo sus
    implementaciones más comunes hoy en día (macOS, Linux, OpenBSD,
    FreeBSD, NetBSD) además de seguir ofreciendo todas las ventajas y
    potencialidades para programadores, incluyen interfaces gráficas y
    facilidades para usuarios que se acercan por primera vez a un
    computador.
  </P
><P
>&#13;    De los sistemas tipos Unix actuales, OpenBSD se caracteriza por ser
    de fuentes abiertas<A
NAME="AEN33"
HREF="#FTN.AEN33"
><SPAN
CLASS="footnote"
>[2]</SPAN
></A
>, por los altos niveles de seguridad que brinda<A
NAME="AEN35"
HREF="#FTN.AEN35"
><SPAN
CLASS="footnote"
>[3]</SPAN
></A
> y por el uso de criptografía fuerte<A
NAME="AEN37"
HREF="#FTN.AEN37"
><SPAN
CLASS="footnote"
>[4]</SPAN
></A
>. Otros sistemas se han enfocado en usabilidad para
    usuarios sin experiencia (por ejemplo macOS o la distribución Ubuntu
    de Linux).
  </P
></DIV
><DIV
CLASS="sect1"
><H1
CLASS="sect1"
><A
NAME="mas_formas_de_uso_de_ssh"
>Más formas de uso de ssh</A
></H1
><P
>&#13;    El protocolo <SPAN
CLASS="strong"
><B
CLASS="emphasis"
>ssh</B
></SPAN
> además de
    permitirle conectarse a servidores en modo texto (ver
    ) le permite iniciar
    aplicaciones gráficas que se ejecuten en el servidor, hacer
    redireccionamiento de puertos y conectarse sin necesidad de dar
    clave (dando una clave sólo una vez en su computador).
  </P
><DIV
CLASS="sect2"
><H2
CLASS="sect2"
><A
NAME="abrir_programas_con_interfaz_grafica"
>Abrir programas con interfaz gráfica</A
></H2
><P
>&#13;      Es posible ejecutar aplicaciones gráficas en el servidor y ver las
      ventanas gráficas en otro computador. Para esto es necesario:
    </P
><P
></P
><OL
TYPE="1"
><LI
><P
>&#13;          Que en el archivo de configuración
          <TT
CLASS="literal"
>/etc/ssh/sshd_config</TT
> del servidor esté
          habilitada la opción:
        </P
><PRE
CLASS="programlisting"
>&#13;X11Forwarding yes
</PRE
></LI
><LI
><P
>&#13;          Que en el computador donde se desea ver la información esté
          instalado un servidor de X-Window.
        </P
></LI
></OL
><P
>&#13;      En el caso de sistemas tipo Unix basta con tener X-Window
      instalado (si ve el modo gráfico es porque ya está instalado).
      Para otros sistemas operativos puede ser posible encontrar un
      servidor de X-Window, por ejemplo para Windows, puede emplear
      Cygwin-X (http://x.cygwin.com) o Xming
      (http://www.straightrunning.com/XmingNotes/).
    </P
><P
>&#13;      Una vez esté ejecutándo el servidor de X-Window en su computador
      entre al servidor usando <SPAN
CLASS="strong"
><B
CLASS="emphasis"
>ssh</B
></SPAN
>
      con opción para hacer reenvío de X11. De esta manera toda la
      información gráfica enviada por el servidor viajará por el canal
      seguro que ssh establece cuando se conecta al servidor. En el caso
      de OpenSSH esto se indica con la opción <TT
CLASS="literal"
>-X</TT
>, i.e
      se debe conectar con:
    </P
><PRE
CLASS="programlisting"
>&#13;ssh -X juan@practica.pasosdeJesus.org
</PRE
><P
>&#13;      En el caso de <SPAN
CLASS="strong"
><B
CLASS="emphasis"
>putty</B
></SPAN
> en el
      dialogo de configuración que aparece antes de iniciar la conexión,
      en el menú Connection-&#62;SSH-&#62;X11 marque 'Enable X11
      forwarding'.
    </P
><DIV
CLASS="figure"
><A
NAME="AEN1326"
></A
><P
><B
>Figura 25. Reenvío de X11 en putty</B
></P
><DIV
CLASS="mediaobject"
><P
><IMG
SRC="img/putty-x11.png"></P
></DIV
></DIV
><P
>&#13;      Una vez haga esto, las aplicaciones gráficas que inicie en la
      sesión ssh que inició, se verán en su computador. Pruebe por
      ejemplo con:
    </P
><PRE
CLASS="programlisting"
>&#13;xeyes
</PRE
></DIV
><DIV
CLASS="sect2"
><H2
CLASS="sect2"
><A
NAME="tunel_reenviando_un_puerto"
>Túnel reenviando un puerto</A
></H2
><P
>&#13;      Puede usar <SPAN
CLASS="strong"
><B
CLASS="emphasis"
>ssh</B
></SPAN
> también para
      crear un túnel entre un puerto local y un puerto accequible desde
      el servidor al cual se conecta. Por ejemplo si en una organización
      tienen un cortafuegos conectado a Internet (digamos que es
      practica.pasosdeJesus.org) y en la red interna cuentan con un
      servidor web SSL (por ejemplo <TT
CLASS="literal"
>base</TT
>), podría
      establecerse un túnel desde un computador fuera de la organización
      y el servidor privado, ingresando al cortafuegos con:
    </P
><PRE
CLASS="programlisting"
>&#13;ssh -L10443:base:443 juan@practica.pasosdeJesus.org
</PRE
><P
>&#13;      donde <TT
CLASS="literal"
>base</TT
> es el nombre del servidor al
      interior de la organización y 443 es el número de puerto de HTTPS
      (protocolo HTTP sobre SSL, es decir conexiones web cifradas).
    </P
><P
>&#13;      Si emplea <SPAN
CLASS="strong"
><B
CLASS="emphasis"
>putty</B
></SPAN
> debe
      especificar esta información en el diálogo de configuración
      Connection-&#62;SSH-&#62;Tunnels como se presenta a continuación
      presionando el botón Add para adicionar el túnel a la región
      `Forwarded ports'.
    </P
><DIV
CLASS="figure"
><A
NAME="AEN1345"
></A
><P
><B
>Figura 26. Configuración de túnel en putty</B
></P
><DIV
CLASS="mediaobject"
><P
><IMG
SRC="img/putty-tunnel.png"></P
></DIV
></DIV
><P
>&#13;      Una vez inicie la conexión debe digitar la clave del usuario en el
      cortafuegos. Con lo cual quedará establecido un túnel entre el
      puerto 10443 del computador local y el puerto 443 del servidor
      <TT
CLASS="literal"
>base</TT
>. Este túnel puede usarse ingresando en un
      navegador la dirección: <TT
CLASS="literal"
>https://127.0.0.1:10443</TT
>
    </P
></DIV
><DIV
CLASS="sect2"
><H2
CLASS="sect2"
><A
NAME="tunel_con_protocolo_socks"
>Túnel con protocolo SOCKS</A
></H2
><P
>&#13;      Otra forma de realizar un túnel, pero sin limitarlo a un puerto es
      empleando un servidor SOCKS incluido con el programa ssh y
      configurando su navegador para emplearlo.
    </P
><P
>&#13;      Primero debe establecer la conexión indicando el puerto que usará
      para el servidor socks con la opción -D, por ejemplo:
    </P
><PRE
CLASS="programlisting"
>&#13;ssh -D8080 juan@practica.pasosdeJesus.org
</PRE
><P
>&#13;      donde 8080 es el número de puerto donde correrá el servidor SOCKS
      en su computador.
    </P
><P
>&#13;      Si emplea <SPAN
CLASS="strong"
><B
CLASS="emphasis"
>putty</B
></SPAN
> debe
      especificar esta información en el diálogo de configuración
      Connection-&#62;SSH-&#62;Tunnels, marcando Dynamic y escribiendo un
      puerto como 8080 en "Local Port," y proceder a
      conectarse al servidor.
    </P
><P
>&#13;      A continuación debe configurar su navegador para que utilice ese
      servidor SOCKS en su propio computador en el puerto que específico
      (8080 en este ejemplo). En el caso de Firefox puede hacerlo desde
      Editar-&#62;Preferencias-&#62;Avanzado-&#62;Red-&#62;Configurar
      especificar en servidor Socks 127.0.0.1 y en puerto 8080. Una vez
      acepte toda navegación que intente realizar se hará por el
      servidor al cual se conectó. Si por ejemplo ese servidor tiene
      acceso en una red interna a un servidor con IP 192.168.1.2 puede
      emplear esa URL en su navegador y llegará a ese computador en la
      red interna donde está el servidor.
    </P
></DIV
><DIV
CLASS="sect2"
><H2
CLASS="sect2"
><A
NAME="lecturas_recomendadas_ssh"
>Lecturas recomendadas</A
></H2
><P
>&#13;      Puede aprender sobre <SPAN
CLASS="strong"
><B
CLASS="emphasis"
>ssh</B
></SPAN
>
      examinado la especificación del protocolo en uno de los borradores
      de la especificación temporal "SSH Protocol
      Architecture"
      <A
HREF="https://tools.ietf.org/html/draft-ietf-secsh-architecture-22"
TARGET="_top"
>https://tools.ietf.org/html/draft-ietf-secsh-architecture-22</A
>.
    </P
><P
>&#13;      Hay información sobre la implementación OpenSSH en
      <A
HREF="http://www.openssh.org"
TARGET="_top"
>http://www.openssh.org</A
>.
    </P
></DIV
></DIV
></DIV
><H3
CLASS="FOOTNOTES"
>Notas</H3
><TABLE
BORDER="0"
CLASS="FOOTNOTES"
WIDTH="100%"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="5%"
><A
NAME="FTN.AEN30"
HREF="t1.htm#AEN30"
><SPAN
CLASS="footnote"
>[1]</SPAN
></A
></TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="95%"
><P
>&#13;        Prácticamente todos los sistemas operativos actuales han tomado
        ideas de ese diseño que fue planeado para ser multitarea,
        multiusuario con una política de permisos y para operación en
        red. Incluso MSDOS implementado hacía 1980 tomó unas pocas ideas
        del interprete de órdenes , sobre este Windows 3.1 adaptó
        funcionalidad multitarea y una interfaz gráfica, sobre este
        Windows 98 empezó a adaptar funcionalidad multiusuario y
        operación en red, mientras que XP y Vista adaptaron el sistema
        de permisos.
      </P
></TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="5%"
><A
NAME="FTN.AEN33"
HREF="t1.htm#AEN33"
><SPAN
CLASS="footnote"
>[2]</SPAN
></A
></TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="95%"
><P
>&#13;        Las fuentes de un programa son las instrucciones para humanos,
        que permiten construir el programa. Al ser abiertas se pueden
        estudiar para aprender como se construyó el programa y pueden
        cambiarse para mejorarlo. Además de estas posibilidades la
        licencia de un programa de fuentes abiertas debe permitir su
        redistribución sin tener que pagar regalías. Esta es una gran
        diferencia con sistemas operativos como macOS y Windows que son
        de fuentes cerradas y sus licencias no permiten redistribuir
        copias.
      </P
></TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="5%"
><A
NAME="FTN.AEN35"
HREF="t1.htm#AEN35"
><SPAN
CLASS="footnote"
>[3]</SPAN
></A
></TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="95%"
><P
>&#13;        Las 2 políticas que lo han caracterizado son apertura total y
        auditorías. Apertura total se refiere a transparencia total en
        cuanto a fallas de seguridad, indicando claramente las
        vulnerabilidades detectadas y las soluciones implementadas con
        fechas. Auditorías se refiere a inspecciones de las fuentes que
        buscan garantizar ausencia de vulnerabilidades.
      </P
></TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="5%"
><A
NAME="FTN.AEN37"
HREF="t1.htm#AEN37"
><SPAN
CLASS="footnote"
>[4]</SPAN
></A
></TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="95%"
><P
>&#13;        Criptografía fuerte: Se refiere a una comunicación secreta. Es
        una manera de guardar información para que no todo el mundo
        tenga acceso directo a ella. Cifrar es transformar información
        para hacerla ilegible, buscando garantizar confidencialidad.
        Típicamente se requiere una clave para cifrar. Un ejemplo de un
        cifrado débil llamado Cesar es aumentar cierta cantidad fija a
        cada carácter del mensaje por cifrar, podemos pensar que la
        cantidad que se aumente es la clave. Por ejemplo el mensaje
        <SPAN
CLASS="QUOTE"
>"Dios te ama"</SPAN
> aumentando 2 letras a cada una (es
        decir cifrado con clave 2), quedaría <SPAN
CLASS="QUOTE"
>"Fkqu vg coc"</SPAN
>
        –aumentar una letra a la D la convierte en E, aumentar dos
        letras la convierte en F, por eso el primer caracter es F, lo
        análogo se hace con los demás. Es un cifrado débil porque hay
        técnicas para determinar cuando una información usa este cifrado
        y dado un texto cifrado con este cifrado hay técnicas rápidas
        para encontrar la clave y descifrar el mensaje. Un cifrado es
        fuerte cuando no se conocen métodos rápidos para encontrar la
        clave y descifrarlo. Son ejemplos de cifrados fuertes AES, RSA y
        Blowfish
      </P
></TD
></TR
></TABLE
><DIV
CLASS="NAVFOOTER"
><HR
ALIGN="LEFT"
WIDTH="100%"><TABLE
SUMMARY="Footer navigation table"
WIDTH="100%"
BORDER="0"
CELLPADDING="0"
CELLSPACING="0"
><TR
><TD
WIDTH="33%"
ALIGN="left"
VALIGN="top"
>&nbsp;</TD
><TD
WIDTH="34%"
ALIGN="center"
VALIGN="top"
>&nbsp;</TD
><TD
WIDTH="33%"
ALIGN="right"
VALIGN="top"
><A
HREF="x41.htm"
ACCESSKEY="N"
>Siguiente</A
></TD
></TR
><TR
><TD
WIDTH="33%"
ALIGN="left"
VALIGN="top"
>&nbsp;</TD
><TD
WIDTH="34%"
ALIGN="center"
VALIGN="top"
>&nbsp;</TD
><TD
WIDTH="33%"
ALIGN="right"
VALIGN="top"
>Primer uso de adJ</TD
></TR
></TABLE
></DIV
></BODY
></HTML
>